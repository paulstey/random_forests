


function surrogate_splits(y_obs_split::Vector, X::DataFrame, col_indcs::Vector{Int}, max_surrogates::Int, weights::Vector)
    surr = Array{Tuple}(max_surrogates)
    p = ncol(X)
    n_surr = p - 1 < max_surrogates ? p - 1: max_surrogates

    for i = 1:n_surr
        surr[i] = _split_classifcation_error_loss(y_obs_split, X, col_indcs, weights)
        col_indcs = setdiff(col_indcs, surr[i][1])
    end
    return surr
end

# This method is dispatched when weights are omitted. This
# allows us to compute the loss function 5x faster
function surrogate_splits(y_obs_split::Vector, X::DataFrame, row_indcs::Vector{Int}, col_indcs::Vector{Int}, max_surrogates::Int)
    surr = Array{Tuple}(max_surrogates)
    p = ncol(X)
    n_surr = p - 1 < max_surrogates ? p - 1: max_surrogates

    for i = 1:n_surr
        surr[i] = _split_classifcation_error_loss(y_obs_split, X, row_indcs, col_indcs)
        col_indcs = setdiff(col_indcs, surr[i][1])
    end
    return surr
end


function apply_surrogate(split_with_na::Vector, X::DataFrame)
